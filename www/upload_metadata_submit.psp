<%
__author__ = "Doug Wendel"
__copyright__ = "Copyright 2009-2010, Qiime Web Analysis"
__credits__ = ["Jesse Stombaugh", "Doug Wendel"]
__license__ = "GPL"
__version__ = "1.0.0.dev"
__maintainer__ = ["Doug Wendel"]
__email__ = "wendel@colorado.edu"
__status__ = "Development"

"""
This script is the upload handler for uploading metadata files using JumpLoader'
"""

"""----------------------------------------------------------------------------
Process the uploaded archive. If valid, write files out to the filesystem
and validate the contents of each.
----------------------------------------------------------------------------"""

from upload_metadata_submit import validateFileContents

# Some code for Windows systems
if form.has_key('file') and form['file'].filename:
    try: # Windows needs stdio set for binary mode.
        import msvcrt
        msvcrt.setmode (0, os.O_BINARY) # stdin  = 0
        msvcrt.setmode (1, os.O_BINARY) # stdout = 1
    except ImportError:
        pass

# A couple of items we will need below
sess = Session.Session(req)
study_id = sess['study_id']
portal_type = sess['portal_type']
web_app_user_id = sess['web_app_user_id']

# Validate zip file contents. If valid, get list of template files back and
# validate their contents
try:
    f = open('/debug_output/error.txt', 'w')
    f.write('start log\n')
    templates, errors = validateFileContents(study_id, portal_type, sess, form, req, web_app_user_id)
    f.write('got templates.\n')
except Exception, e:
    f.write('caught error:\n')
    f.write(str(e))
finally:
    f.close()

if templates != None:
    # Set the template names into our session variable
    fullnames = []
    for template in templates:
        fullnames.append(os.path.join(form['output_dir'], template))
    sess['templates'] = fullnames
    sess.save()
%>
