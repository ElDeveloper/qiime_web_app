<%
#!/usr/bin/env python
from random import choice, randrange
import os
import zipfile
from os import popen
if form.has_key('file') and form['file'].filename:
    try: # Windows needs stdio set for binary mode.
        import msvcrt
        msvcrt.setmode (0, os.O_BINARY) # stdin  = 0
        msvcrt.setmode (1, os.O_BINARY) # stdout = 1
    except ImportError:
        pass

    # A nested FieldStorage instance holds the file
    fileitem = form['file']
    
    # Test if the file was uploaded
    if fileitem.filename:
        # strip leading path from file name to avoid directory traversal attacks
        fname=form['output_fname']+fileitem.filename.strip().replace(" ","")
        dir_path =os.path.join(os.path.dirname(req.filename), form['output_dir'])
        zippedf = open(os.path.join(dir_path, fname), 'wb')
        zippedf.write(fileitem.file.read())
        zippedf.close()
    
        t=zipfile.ZipFile(os.path.join(dir_path, fname),'r')

        for f in t.namelist():
            if f.endswith('/'):
                try:
                    os.mkdir(os.path.join(dir_path, f))
                except:
                    pass
            else:
                
                outfname=os.path.join(dir_path, f)
                outfile = open(outfname, 'wb')
                outfile.write(t.read(f))
                outfile.flush()
                outfile.close()
                
                if test or script:
                    # Change the permissions on the new file to make it executable
                    chmod_string = ' '.join(['chmod 755',output_fp])
                    popen(chmod_string)
                    
                if outfname.endswith('.sff'):
                    try: 
                        sffinfo_cmd=' '.join(['sffinfo -m',str('F2YRTSR02.sff'),'-m'])
                        popen(sffinfo_cmd)
                    except:
                        res.write("message:File exists, overwrite?")

#
%>
