<%
__author__ = "Jesse Stombaugh"
__copyright__ = "Copyright 2009-2010, Qiime Web Analysis"
__credits__ = ["Doug Wendel", "Jesse Stombaugh"]
__license__ = "GPL"
__version__ = "1.0.0.dev"
__maintainer__ = ["Doug Wendel", "Jesse Stombaugh"]
__email__ = "jesse.stombaugh@colorado.edu"
__status__ = "Production"

'''This script is the SFF upload page, which uses the JumpLoader java applet.'''
%>

<h3>Metadata Upload</h3>

<script type="text/javascript">

var study_dir = \'<%=sess['study_dir']%>\'+'/'
window.onload="resizeApplet()";

/*Create a random filename for uploading the zip file.*/
var keylist="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ123456789"
var temp=''
var output_fname

function generatepass(plength)
{
    temp=''
    for (i=0;i<plength;i++){
        temp+=keylist.charAt(Math.floor(Math.random()*keylist.length))
    }
    return temp
}

/*Initialize the jumploader applet*/
function appletInitialized( uploader ) 
{
    output_fname='tmp'+generatepass(10)
    var attributeSet = uploader.getUploader().getAttributeSet();
    var attribute = attributeSet.createStringAttribute( "output_fname", output_fname);
    attribute.setSendToServer( true );
    var attribute2 = attributeSet.createStringAttribute( "output_dir", study_dir);
    attribute2.setSendToServer( true );
    var attribute3 = attributeSet.createStringAttribute( "web_app_user_id", <%=sess['web_app_user_id']%>);
    attribute3.setSendToServer( true );
    var attribute4 = attributeSet.createStringAttribute( "study_id", <%=sess['study_id']%>);
    attribute4.setSendToServer( true );
}

/*When file status changes, check if the upload was successful*/
var valid = new Array();
var invalid = 0;
var complete = false

function uploaderFileStatusChanged(uploader, file)
{
    if (file.getStatus() == file.STATUS_FAILED)
    {
        alert('failed');
        document.getElementById("complete").innerHTML = file.getResponseContent();
        return;
    }
    
    var filecount = uploader.getFileCount()
    var index = file.getIndex()
    if (file.getResponseContent() != null && file.getResponseContent() != '')
    {
        var response_text = file.getResponseContent();
        var ask_user_to_reload = false;
        var message = '';
        
        if (response_text == "locked - missing samples")
        {
            message = "Samples currently in the database are not represented in the supplied files. The study is locked and key fields cannot be modified at this time.";
            ask_user_to_reload = false;
        }
        elif (response_text == "locked - immutable fields changed")
        {
            message = "One or more key fields has been changed: sample_name, linker, primer, barcode, run_prefix, or platform). The study is locked and key fields cannot be modified at this time.";
            ask_user_to_reload = false;
        }
        elif (response_text == "missing samples")
        {
            message = "Samples currently in the database are not represented in the supplied files.";
            ask_user_to_reload = true;
        }
        elif (response_text == "immutable fields changed")
        {
            message = "One or more key fields has been changed: sample_name, linker, primer, barcode, run_prefix, or platform).";
            ask_user_to_reload = true;
        }
        
        if (ask_user_to_reload)
        {
            var ans = confirm(message + " Do you wish to wish to replace the current metadata with the data from these files?");
            if (ans)
            {
                var xmlhttp = new XMLHttpRequest();
                var url = "set_metadata_load_type.psp";
                
                xmlhttp.onreadystatechange=function()
                {
                    if (xmlhttp.readyState==4)
                    {
                        setCompleteBox();
                    }
                }
    
                // perform a GET 
                xmlhttp.open("GET", url, true);
                xmlhttp.send(null);
            }
            else
            {
                response_text = "Upload aborted";
            }
        }
        document.getElementById("complete").innerHTML = response_text;
    }
    else
    {
        if (index < (filecount - 1))
        {
            if(file.isFinished() && file.getType() == 0)
            {
                valid[index] = true;
            }
            else
            {
                valid[index] = false;
            }
        }
        else
        {
            if( file.isFinished() && file.getType() == 0 ) 
            {
                valid[index]=true;
                complete=true
            }
            else if (file.isFailed())
            {
                valid[index]=false;
                complete=true
            }
            else
            {
                valid[index]=false;
            }
        }
        if (complete)
        {
            for (var i=0; i < valid.length; i++)
            {
                if (valid[i])
                {
                    //do nothing
                }
                else
                {
                    invalid = invalid + 1;
                }
            }
            if (invalid == 0)
            {
                document.getElementById( "applet" ).innerHTML='';
                setCompleteBox();
            }
        }
    }
}

/*Resize the java applet depending on the browser*/
function resizeApplet() 
{
	var applet = document.jumpLoaderApplet;
	var dx = 0;
	var dy = 7;
	var w_newWidth, w_newHeight;
	var w_maxWidth = 600, w_maxHeight = 250;
	var dx = 0;
	var dy = 2;
	if( navigator.appName.indexOf( "Microsoft" ) != -1 ) 
	{
		w_newWidth = document.body.clientWidth;
		w_newHeight = document.body.clientHeight;
	}
	else 
	{
		var netscapeScrollWidth = 15;
		w_newWidth = window.innerWidth - netscapeScrollWidth;
		w_newHeight = window.innerHeight - netscapeScrollWidth;
	}
	if( w_newWidth > w_maxWidth ) 
	{
		w_newWidth = w_maxWidth;
	}
	if( w_newHeight > w_maxHeight ) 
	{
		w_newHeight = w_maxHeight;
	}
	applet.width = w_newWidth - dx;
	applet.height = w_newHeight - dy;
	applet.setSize( w_newWidth - dx, w_newHeight - dy );
	//window.scroll( 0,0 );
}

function setCompleteBox()
{
<%
if sess['study_id'] == 0:
    req.write('document.forms["validate_only"].submit();')
else:
    req.write('document.forms["upload_complete"].submit();')
# End indent
%>
}

</script>

<form name="validate_only" id="validate_only" method="post" action="validate.psp?page=validate_metadata_extra_fields.psp"> 
</form>

<form name="upload_complete" id="upload_complete" method="post" action="fusebox.psp?page=validate_metadata_extra_fields.psp"> 
</form>

<table>
<tr><td>
<div id='applet'>
<!--this is the jumploader applet-->
<p><b>Please zip your metadata files into a single archive prior to uploading.</b><br/>
The filename should not contain spaces or non-alphanumeric characters.</p>

<applet name="jumpLoaderApplet" code="jmaster.jumploader.app.JumpLoaderApplet.class" 
        archive="jar/jumploader_z.jar" height="250" width="600" mayscript>

    <param name="vc_uploadListViewName" value="_compact"/>
    <param name="vc_lookAndFeel" value="crossPlatform"/>
    <param name="vc_uploadViewStartUploadButtonText" value="Start upload"/>
    <param name="vc_uploadViewStartUploadButtonImageUrl" value="/img/media_play_green.png"/>
    <param name="vc_uploadViewStopUploadButtonText" value="Stop upload"/>
    <param name="vc_uploadViewStopUploadButtonImageUrl" value="/img/media_stop_red.png"/>
    
    <param name="uc_maxFileLength" value="100000000000"/>
    <param name="uc_partitionLength" value="16777216"/>
    <param name="uc_useMd5" value="true"/>
    <param name="uc_usePartitionMd5" value="true"/>
    <param name="uc_uploadUrl" value="upload_metadata_submit.psp">
    <param name="uc_fileNamePattern" value='^.+\.((zip))' />
    
    <param name="ac_fireAppletInitialized" value="true"/> 
    <param name="ac_fireUploaderFileStatusChanged" value="true"/>

</applet>

</div>
</td></tr>
<tr><td>
<!--this is the message area, where results are written-->
<div id='complete'>
</div>
</td></tr>
</table>
<p/>

