<%
__author__ = "Jesse Stombaugh"
__copyright__ = "Copyright 2009-2010, Qiime Web Analysis"
__credits__ = ["Doug Wendel"]
__license__ = "GPL"
__version__ = "1.0.0.dev"
__maintainer__ = ["Doug Wendel"]
__email__ = "wendel@colorado.edu"
__status__ = "Production"
%>

<%
from data_access_connections import data_access_factory
from enums import DataAccessType

# Grab some required values for this page
sess = Session.Session(req)
data_access = data_access_factory(DataAccessType.qiime_production)
job_locator_id = 0
study_id = sess['study_id']
try: 
	meta_analysis_id = sess['meta_analysis_id']
except:
	meta_analysis_id=False
	
if 'meta_analysis_id' in sess:
    meta_analysis_id = sess['meta_analysis_id']
if 'study_id' in sess:
    study_id = sess['study_id']

if study_id:
    job_locator_id = int(study_id)
elif meta_analysis_id:
    job_locator_id = int(meta_analysis_id)
else:
    raise('Could not determine job identifier. study_id and meta_analysis_id are both empty.')

job_type_id = int(form['job_type_id'])
jobs = data_access.getJobInfo(job_locator_id, job_type_id)

for job in jobs:
    completed_status = 'COMPLETED_OKAY'
    display_text = 'not set'
    
    if job['job_state_name'] != completed_status:
        display_text = 'Job %s: %s <a href="clear_job.psp?job_id=%s&job_type_id=%s">(clear job)</a><br>' % (job['job_id'], job['job_state_name'], job['job_id'],job['job_type_id'])
    elif job['job_state_name'] == completed_status and int(sess['is_admin']) == 1:
        display_text = 'Job %s: %s <a href="clear_job.psp?job_id=%s&job_type_id=%s">(admin option: clear job)</a><br>' % (job['job_id'], job['job_state_name'], job['job_id'],job['job_type_id'])
    else:
        display_text = 'Job %s: %s <br>' % (job['job_id'], job['job_state_name'])
        
    req.write(display_text)
    if job['job_notes'] != None:
        req.write('<br/>Output: ' + job['job_notes'])

%>
