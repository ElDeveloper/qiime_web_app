<%
__author__ = "Doug Wendel"
__copyright__ = "Copyright 2009-2010, Qiime Web Analysis"
__credits__ = ["Doug Wendel"]
__license__ = "GPL"
__version__ = "1.0.0.dev"
__maintainer__ = ["Doug Wendel"]
__email__ = "wendel@colorado.edu"
__status__ = "Production"

'''This script is the EMP user login page'''

from data_access_connections import data_access_factory
from enums import DataAccessType,ServerConfig
import operator
import locale
locale.setlocale(locale.LC_ALL, 'en_US')

data_access = data_access_factory(ServerConfig.data_access_type)
sess = Session.Session(req)
sess['portal_type'] = 'emp'
sess.save()

total_num_samples = 0
query_string = """ 
select  count(*)
from    sample sa
        inner join study s
        on sa.study_id = s.study_id
        inner join sff.analysis an 
        on s.study_id = an.study_id 
where   s.portal_type = 'emp'
        and s.project_name not like '%%test%%'
        and an.analysis_id = 
        (
            select  max(an2.analysis_id)
            from    sff.analysis an2
            where   an2.study_id = s.study_id                
        )
"""
total_num_samples = data_access.dynamicMetadataSelect(query_string).fetchone()[0]

def createJQueryPlot(field_name, plot_title):
    plot_data = []
    cutoff_percent = .02
    other_count = 0
    other_items = []
    
    query_string = """ 
    select  lower({0}), count({0}) as cnt 
    from    sample sa 
            inner join study s 
            on sa.study_id = s.study_id
            inner join sff.analysis an 
            on s.study_id = an.study_id
    where   s.portal_type = 'emp' 
            and s.project_name not like '%%test%%' 
            and {0} is not null 
            and an.analysis_id = 
            (
                select  max(an2.analysis_id)
                from    sff.analysis an2
                where   an2.study_id = s.study_id                
            )
    group by lower({0}) 
    order by cnt desc 
    """.format(field_name)
    results = data_access.dynamicMetadataSelect(query_string)

    for row in results:
        item_label = row[0]
        item_count = row[1]
        
        if ':' in item_label:
            item_label = item_label[item_label.index(':') + 1:]
        
        if item_count / float(total_num_samples) < cutoff_percent:
            other_count += item_count
            other_items.append(item_label)
        else:
            plot_data.append((item_label, item_count))
        
    plot_data.append(('Other', other_count))

    # The plot data
    data_string = '['
    for label, count in plot_data:
        data_string = data_string + """['{0}',{1}],""".format(label, count)
    data_string = data_string[:-1] + ']'

    # Generate the JavaScript string
    js = """
    <div id="{0}" style="height:300px; width:500px; float:left; margin:10px;"></div>
    <script>
    $('#{0}').jqChart({{
        title: 
        {{ 
            text: '{1}',
            font: '18px sans-serif',
            margin: 3
        }},
        legend: {{ title: {{ text: '{0}'}} }},
        //background: '#E8F0FA',
        //background: '#FFFFFF',
        series: [
              {{
                  type: 'pie',
                  data: {2},
                  labels: {{
                      stringFormat: '%d%%',
                      valueType: 'percentage',
                       font: '15px sans-serif',
                       fillStyle: 'white'
                  }},
                  strokeStyle : 'black',
                  lineWidth : 2
              }}
            ]
    }});

    $('#{0}').bind('tooltipFormat', function (e, data) {{
          var percentage = data.series.getPercentage(data.value);
          percentage = data.chart.stringFormat(percentage, '%.2f%%');

          var tooltip = '<b>' + data.dataItem[0] + '</b></br>' + data.value + ' (' + percentage + ')';
          if (data.dataItem[0] == 'Other')
          {{
            tooltip = tooltip + '<br/>{3}'
          }}

          return tooltip;
      }}); 

    </script> 
    """.format(field_name, plot_title, data_string, '<br/>'.join(sorted(other_items)))

    return js

# The list of plots to generate. The dict key must be a column in the sample table.
plots = {}
plots['env_matter'] = 'Samples by Env Matter'
plots['env_feature'] = 'Samples by Env Feature'
plots['env_biome'] = 'Samples by Env Biome'
plots['country'] = 'Samples by Location'

%>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>Earth Microbiome Project - Metadata Portal</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />

<link rel="stylesheet" href="emp.css" type="text/css">
<link class="include" rel="stylesheet" type="text/css" href="/qiime/js/jqChartJQueryPlugin_3_0_0_0/css/jquery.jqChart.css" />    

<script type="text/javascript" src="/qiime/js/jquery.min.js"></script>
<script type="text/javascript" src="/qiime/js/jquery_validate/lib/jquery.js"></script>
<script type="text/javascript" src="/qiime/js/jqChartJQueryPlugin_3_0_0_0/js/jquery-1.5.1.min.js"></script>
<script type="text/javascript" src="/qiime/js/jqChartJQueryPlugin_3_0_0_0/js/excanvas.js"></script>
<script type="text/javascript" src="/qiime/js/jqChartJQueryPlugin_3_0_0_0/js/jquery.jqChart.min.js"></script>

<script type="text/javascript">
function toggleSection(section_name)
{
    div = document.getElementById(section_name);
    header_name = section_name + '_header';
    if (div.style.display == 'none')
    {
        $('#' + section_name).fadeIn('fast')
        header_content = $('#' + header_name)[0].innerHTML
        $('#' + header_name)[0].innerHTML = header_content.replace('+', '-');
        window.scrollBy(0, 200);
    }
    else
    {
        $('#' + section_name).fadeOut('fast')
        header_content = $('#' + header_name)[0].innerHTML
        $('#' + header_name)[0].innerHTML = header_content.replace('-', '+');
    }
}
</script>

</head>

<body>
<div class="container">
	<div id="header">
		 <div class="disclaimer"></div>
	</div>
</div>
<div class="content">

<table class="header_table">
<tr><td>Please Log In</td></tr>
</table>

<%
# This is the location where the user directories are written
environment_vars=req.get_options()
output_dir='%s/user_data' % environment_vars['HOME']
link_path_dir = 'studies'
if form.has_key('username'):
	user_data = data_access.authenticateWebAppUser( form["username"], form["password"] )
	if ( user_data and user_data['verified']=='y'):
		url = 'http://%s/qiime/index.psp?portal_type=emp&username=%s&password=%s&is_admin=%s' %\
			(req.hostname, form["username"], form["password"], user_data['is_admin'])
		req.write('<script language=\"javascript\">window.location = "%s";</script>' % url)
	else:
		req.write("<p style='color:#FF0000;'>Invalid username/password.</p>")

# end
%>
<p/>
<table width="100%">
<tr>
<td>
<form method="post" action="index.psp">
<table width="100%">
	<tr><td>Email</td><td><input type="text" id="username" name="username"></td></tr>
	<tr><td>Password</td><td><input type="password" id="password" name="password"></td></tr>
	<tr><td colspan="2"><input type="submit" value="Log In"></tr>
</table>
</form>
</td>

<td>
<table width="100%">
	<tr>
	    <td style="text-align:right;">Don't have an account? Head here then return to this URL when you've set one up:<br/>
	    <a href="http://<%=req.hostname%>/qiime/register_user.psp">Create Account</a>
	    </td>
	</tr>
</table>
</td>
</tr>
</table>

<br/>







<%
query_string = 'select * from emp_statistics'
total_otus, total_seqs, total_collaborators, total_biomes, total_samples = data_access.dynamicMetadataSelect(query_string).fetchone()
%>

<table  bgcolor="#DDDDDD" padding="0" width="100%"><tr><td>
<table>
    <tr>
        <td><b>Total EMP Samples:</b> <%=locale.format("%d", total_num_samples, grouping=True)%></td>
        <td width="10"></td>
        <td><b>Total Sequences:</b> <%=locale.format("%d", total_seqs, grouping=True)%></td>
        <td width="10"></td>
        <td><b>Biomes Represented:</b> <%=locale.format("%d", total_biomes, grouping=True)%></td>
        <td width="10"></td>
        <td><b>Total GG97 OTUs:</b> <%=locale.format("%d", total_otus, grouping=True)%></td>
        <td width="10"></td>
        <td><b>Collaborators:</b> <%=locale.format("%d", total_collaborators, grouping=True)%></td>
    </tr>
</table>
</td></tr></table>
<br/>




<hr/>















<!-- STATISTICS -->

<h3 id="stats_div_header">
<a href="" onclick="toggleSection(\'stats_div\'); return false;">[+] EMP Statistics</a>
</h3>

<div id="stats_div" name="stats_div" style="display:none; border:10px solid; border-color:#ffffff; border-radius:20px; width:95%; height=100%; padding:5px;">

<%

sorted_plots = sorted(plots.iteritems(), key=operator.itemgetter(0))
for plot_name, plot_title in sorted_plots:
    js = createJQueryPlot(plot_name, plot_title)
    req.write(js)
# end
%>
</div>
<div style="clear:both;"></div>


<!-- SAMPLE LOCATIONS -->


<h3 id="map_div_header">
<a href="" onclick="toggleSection(\'map_div\'); return false;">[+] EMP Sample Locations</a>
</h3>

<div id="map_div" name="map_div" style="display:none; border:10px solid; border-color:#ffffff; border-radius:20px; width:98%; height=100%; padding:5px;">
    <%@ include file="../visualize_all_sample_locations.psp"%>
</div>

<!-- DOWNLOAD DATA -->

<h3  id="download_div_header">
<a href="" onclick="toggleSection(\'download_div\'); return false;">[+] Download Public Data</a>
</h3>

<div id="download_div" name="download_div" style="display:none; border:10px solid; border-color:#ffffff; border-radius:20px; width:95%; height=100%; padding:5px; background-color:#C5CEE0; float:left">
<%
public_studies = data_access.getPublicEMPDownloadLinks()
for study_id, project_name, file_path, study_abstract in public_studies:
	req.write('<a href="{0}">{1}</a><br/>\n'.format(file_path, project_name))
	req.write('{0}<br/><br/>\n'.format(study_abstract))
# End indent
%>
</div>

</div>


<script>
//toggleSection(\'download_div\');
toggleSection(\'map_div\');
toggleSection(\'map_div\');
</script>

</body>
</html>
