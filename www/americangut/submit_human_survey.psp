<%
from data_access_connections import data_access_factory
from enums import *
from utils.mail import send_email

from utils.psp_utils import format_submit_form_to_fusebox_string
# form where users can request for help

ag_data_access = data_access_factory(ServerConfig.data_access_type, 'american_gut') 
sess = Session.Session(req)

#req.write(str(sess))

# Insert the new row
participant_name = form['participant_name']
ag_login_id = sess['user_data']['web_app_user_id']

# Clear any old data for this participant
ag_data_access.removeAGHumanParticipant(ag_login_id, participant_name)

# Create the new participant if it doesn't exist (merges)
ag_data_access.addAGHumanParticipant(ag_login_id, form['participant_name'])

# Define the multiples
multiples = set(['supplements_', 'dietrestrictions_', 'travel_location_', 'travel_duration_', 'related_participant_', 'relation_', 'pet_', 'pet_location_', 'pet_contact_', 'antibiotic_med_', 'generalmeds_', 'diabetes_medications_', 'migraine_medication_'])

#req.write(str(form) + '<br/><br/>')

# Add/update all of the data
for f in form:
	form_value = form[f].replace("'", "''")
	#req.write('{0}: "{1}"<br/>\n'.format(f, form_value)
	try:
		# Log the entry in the general table
		ag_data_access.addAGGeneralValue(ag_login_id, participant_name, f, form_value)
	except Exception, e:
		req.write('Failed to add to general table.<br/>\n')
		req.write('Failed to insert field "{0}" with value "{1}"<br/>\n'.format(f, form_value))
		req.write(str(e) + '<br/>\n')

	try:
		# Already inserted
		if f == 'participant_name':
			continue

		for m in multiples:
			if f.startswith(m):
				#req.write('write multiple for {0}<br/>\n'.format(f))
				ag_data_access.insertAGMultiple(ag_login_id, participant_name, f, form_value)
				break
		else:
				#req.write('write single for {0}<br/>\n'.format(f))
				ag_data_access.addAGSingle(ag_login_id, participant_name, f, form_value, 'ag_human_survey')
	except Exception, e:
		req.write('\n\nFailed to insert field "{0}" with value "{1}"<br/>\n'.format(f, form_value))
		req.write(str(e) + '<br/>\n')

v = form.get('deceased_parent', None)
message = ""
if(v == 'yes'):
    SUBJECT = """AGDECEASED: %s (ag_login_id: %s) has deceased parent""" % \
        (participant_name, ag_login_id)

    MESSAGE = """Contact: %s
    --------------------------------------------------------------------------------
    Message:
    This child has a deceased parent, the person filling out the survey for them
    needs to provide proof. Email them for proof.
    --------------------------------------------------------------------------------
    """ % participant_name

    try:
        send_email(MESSAGE, SUBJECT)
        message=("%s successfully added as a participant! If you have not "
            "already done so, please confirm your kits. Then, you may add "
            "assign samples to participants." % participant_name)
    except:
        message=("There was a problem, "
            'Please contact us directly at '
            '<a href=&quot;mailto:info@americangut.org&quot;>'
            'info@americangut.org</a>')

# Assuming nothing exploded... back to the portal
req.write(format_submit_form_to_fusebox_string(page='portal.psp',
    message=message))
#UNINDENT
%>
