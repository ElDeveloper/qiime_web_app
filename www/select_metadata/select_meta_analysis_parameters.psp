<%
#!/usr/bin/env python

__author__ = "Jesse Stombaugh"
__copyright__ = "Copyright 2010, Qiime Web Analysis"
__credits__ = ["Jesse Stombaugh"]
__license__ = "GPL"
__version__ = "1.0.0.dev"
__maintainer__ = ["Jesse Stombaugh"]
__email__ = "jesse.stombaugh@colorado.edu"
__status__ = "Production"

from data_access_connections import data_access_factory
from enums import ServerConfig
import os
data_access = data_access_factory(ServerConfig.data_access_type)
from select_metadata import public_cols_to_dict,unique_cols_to_select_box_str
from enums import FieldGrouping

from qiime.alpha_diversity import list_known_metrics
alpha_metrics=list_known_metrics();

from qiime.beta_diversity import list_known_metrics
beta_metrics=list_known_metrics();

# get a list of public columns
public_columns=data_access.getPublicColumns(sess['web_app_user_id'])
form_data=sess['form']

# get column headers
column_headers=[]
for i in form_data:
    if i != 'page':
        column_headers.append(i.split('####STUDIES####')[0].split('####SEP####')[1])

# sort column headers
column_headers.sort()
%>

<script src="js/overlib.js" type="text/javascript" ></script>
<script src="select_metadata/jquery-1.3.2.js" type="text/javascript"></script> 
<script src="select_metadata/jQuery.dualListBox-1.2.js" type="text/javascript"></script> 
<script src="select_metadata/metadata_selection.js" type="text/javascript" ></script>
<script type="text/javascript" src="./js/jquery_validate/lib/jquery.metadata.js"></script>
<script type="text/javascript" src="./js/jquery_validate/jquery.validate.js"></script>
<script language="javascript" type="text/javascript"> 
    /*
    $.metadata.setType("attr","validate");
    $(document).ready(function(){
        $("#meta_analysis_params").validate({
        rules: {
            fname_prefix: {
                required: true,
            },
         },
        });
    });
    */
    window.onload=$(function() {$.configureBoxes();});
    
    var savedValues=new Array();
    
    function check_int_range_0_100000000(input_id){
        //this function takes an input box id and identifies if the number
        //is between a certain threshold. when null returns the value 0
        var val=parseInt(document.getElementById(input_id).value);
        if (isNaN(val) || val==''){
            val=0;
        }else if(val<0 || val>100000000){
            alert('The ' + input_id + 
                  ' threshold must be an integer between 0 and 100000000!');
            return 'false';
        }
        return val;
    }
    
    function check_float_range_0_100000000(input_id){
        //this function takes an input box id and identifies if the number
        //is between a certain threshold. when null returns the value 0
        var val=parseFloat(document.getElementById(input_id).value);
        if (isNaN(val) || val==''){
            val=0;
        }else if(val<0 || val>100000000){
            alert('The ' + input_id + 
                  ' threshold must be an integer between 0 and 100000000!');
            return 'false';
        }
        return val;
    }
    
    function check_float_range_0_1(input_id){
        //this function takes an input box id and identifies if the number
        //is between a certain threshold. when null returns the value 0
        var val=parseFloat(document.getElementById(input_id).value);
        if (isNaN(val) || val==''){
            val=0;
        }else if(val<0 || val>100000000){
            alert('The ' + input_id + 
                  ' threshold must be an integer between 0 and 100000000!');
            return 'false';
        }
        return val;
    }

    function get_select_box_values(input_id){
        //this function takes a select-box id and returns a list of selected 
        //values
        var vals=document.getElementById(input_id).options;
        var vals_to_use=new Array();
        var iterator=0;
        for (var i=0,il=vals.length;i<il;i++){
            if (vals[i].selected){
                vals_to_use[iterator]=vals[i].value;
                iterator++;
            }
        }
        return vals_to_use;
    }
    
    function post_Array() {
        //this function pulls all the values from the form and writes them
        //as hidden form values to be submitted to the processing script
        
        var form_object=document.getElementById("metadata_submission") 
        var jobs_to_start=new Array();
        var fname_prefix=document.getElementById("fname_prefix").value;
        form_object.innerHTML=form_object.innerHTML+'<input type="hidden" name="fname_prefix" value="'+fname_prefix+'">'

        var taxonomy_class=document.getElementById("taxonomy").value;
        form_object.innerHTML=form_object.innerHTML+'<input type="hidden" name="taxonomy" value="'+taxonomy_class+'">'

        //set the rarefaction threshold
        var otutable_rarefied_at=check_int_range_0_100000000('otutable_rarefied_at');
        if (otutable_rarefied_at != 'false'){
            form_object.innerHTML=form_object.innerHTML+'<input type="hidden" name="otutable_rarefied_at" value="'+otutable_rarefied_at+'">'
        }else if (otutable_rarefied_at == 'false'){
            return false;
        }
            
        //set beta-diversity parameters
        if (document.getElementById('check_bdiv').checked){
            jobs_to_start.push('bdiv')

            //set the metric to use
            var bdiv_metric=get_select_box_values("bdiv_metric");
            form_object.innerHTML=form_object.innerHTML+'<input type="hidden" name="beta_diversity:metrics" value="'+bdiv_metric.join()+'">'

            //set the rarefaction threshold
            var bdiv_rarefied_at=check_int_range_0_100000000('bdiv_rarefied_at');
            if (bdiv_rarefied_at != 'false'){
                form_object.innerHTML=form_object.innerHTML+'<input type="hidden" name="bdiv_rarefied_at" value="'+bdiv_rarefied_at+'">'
            }else if (bdiv_rarefied_at == 'false'){
                return false;
            }
            
            if (document.getElementById('check_3d_plots').checked){
                jobs_to_start.push('3d_bdiv_plots')
                //set the 3D background color
                var threed_bgcolor=document.getElementById("3dbdiv_bgcolor");
                form_object.innerHTML=form_object.innerHTML+'<input type="hidden" name="make_3d_plots:background_color" value="'+threed_bgcolor[threed_bgcolor.selectedIndex].value+'">'
            
                //get the 3d colorby options
                var threed_colorby=get_select_box_values("3dbdiv_colorby");
                form_object.innerHTML=form_object.innerHTML+'<input type="hidden" name="make_3d_plots:colorby" value="'+threed_colorby.join()+'">'

                //set the custom axis to use
                var threed_axes=document.getElementById("3dbdiv_axes");
                form_object.innerHTML=form_object.innerHTML+'<input type="hidden" name="make_3d_plots:custom_axes" value="'+threed_axes[threed_axes.selectedIndex].value+'">'
                //alert(form_object.innerHTML)
            }
            
            if (document.getElementById('check_2d_plots').checked){
                jobs_to_start.push('2d_bdiv_plots')
                //set the 2D background color
                var twod_bgcolor=document.getElementById("2dbdiv_bgcolor");
                form_object.innerHTML=form_object.innerHTML+'<input type="hidden" name="make_2d_plots:background_color" value="'+twod_bgcolor[twod_bgcolor.selectedIndex].value+'">'
            
                //get the 2d colorby options
                var twod_colorby=get_select_box_values("2dbdiv_colorby");
                form_object.innerHTML=form_object.innerHTML+'<input type="hidden" name="make_2d_plots:colorby" value="'+twod_colorby.join()+'">'
            }
            
            if (document.getElementById('check_dist_hist').checked){
                jobs_to_start.push('disthist_bdiv_plots')
                //set the distance hist background color
                var disthist_bgcolor=document.getElementById("disthist_bgcolor");
                form_object.innerHTML=form_object.innerHTML+'<input type="hidden" name="make_distance_histograms:background_color" value="'+disthist_bgcolor[disthist_bgcolor.selectedIndex].value+'">'
            
                //get the distance histogram options
                var disthist_fields=get_select_box_values("disthist_fields");
                form_object.innerHTML=form_object.innerHTML+'<input type="hidden" name="make_distance_histograms:fields" value="'+disthist_fields.join()+'">'

                //set whether to use monte-carlo
                var disthist_monte_carlo=document.getElementById("disthist_montecarlo");
                form_object.innerHTML=form_object.innerHTML+'<input type="hidden" name="make_distance_histograms:monte_carlo" value="'+disthist_monte_carlo[disthist_monte_carlo.selectedIndex].value+'">'
                
                if (disthist_monte_carlo[disthist_monte_carlo.selectedIndex].value=='True'){
                    //set the monte-carlo iteration
                    var monte_carlo_iter=check_int_range_0_100000000('disthist_monteiter');
                    if (monte_carlo_iter != 'false' && monte_carlo_iter!=0){
                        form_object.innerHTML=form_object.innerHTML+'<input type="hidden" name="make_distance_histograms:monte_carlo_iters" value="'+monte_carlo_iter+'">'
                    }else if (monte_carlo_iter == 'false'){
                        return false;
                    }
                }
            }
            
        }
        //set heatmap parameters
        if (document.getElementById('check_heatmap').checked){
            jobs_to_start.push('heatmap')
            
            //set the num otus
            var heatmap_otu_hits=check_int_range_0_100000000('heatmap_otu_hits');
            if (heatmap_otu_hits != 'false'){
                form_object.innerHTML=form_object.innerHTML+'<input type="hidden" name="make_otu_heatmap_html:num_otu_hits" value="'+heatmap_otu_hits+'">'
            }else if (heatmap_otu_hits == 'false'){
                return false;
            }
            
            //set whether to use log-transform
            var heatmap_log_transform=document.getElementById("heatmap_log_transform");
            form_object.innerHTML=form_object.innerHTML+'<input type="hidden" name="make_otu_heatmap_html:log_transform" value="'+heatmap_log_transform[heatmap_log_transform.selectedIndex].value+'">'
            
            if (heatmap_log_transform[heatmap_log_transform.selectedIndex].value=='True'){
                //set the log transform replace zero number
                var log_transform_replace=check_int_range_0_100000000('log_transform_replace');
                if (log_transform_replace != 'false'){
                    form_object.innerHTML=form_object.innerHTML+'<input type="hidden" name="make_otu_heatmap_html:log_eps" value="'+log_transform_replace+'">'
                }else if (log_transform_replace == 'false'){
                    return false;
                }
            }
            
        }
         //set taxa-summary parameters
            if (document.getElementById('check_sumtaxa').checked){
                jobs_to_start.push('sumtaxa')
                if (document.getElementById('check_sumcat').checked){
                    jobs_to_start.push('sumcat')
                    
                    //get the category to summarize by option
                    var sumcat_cat=get_select_box_values("sumcat_cat");
                    form_object.innerHTML=form_object.innerHTML+'<input type="hidden" name="summarize_otu_by_cat:meta_category" value="'+sumcat_cat.join()+'">'
                    
                    //set the normalization
                    var sumcat_norm=document.getElementById("sumcat_norm");
                    form_object.innerHTML=form_object.innerHTML+'<input type="hidden" name="summarize_otu_by_cat:normalize_flag" value="'+sumcat_norm[sumcat_norm.selectedIndex].value+'">'
                    
                }
                //set the absolute values
                var sumtaxa_abs=document.getElementById("sumtaxa_abs");
                form_object.innerHTML=form_object.innerHTML+'<input type="hidden" name="summarize_taxa:absolute_abundance" value="'+sumtaxa_abs[sumtaxa_abs.selectedIndex].value+'">'
                
                //get the summary levels
                var sumtaxa_level=get_select_box_values("sumtaxa_level");
                form_object.innerHTML=form_object.innerHTML+'<input type="hidden" name="summarize_taxa:level" value="'+sumtaxa_level.join()+'">'
                
                //set the number of categories to use
                var sumtaxa_numcat=check_int_range_0_100000000('sumtaxa_numcat');
                if (sumtaxa_numcat != 'false' && sumtaxa_numcat!=0){
                    form_object.innerHTML=form_object.innerHTML+'<input type="hidden" name="plot_taxa_summary:num" value="'+sumtaxa_numcat+'">'
                }else if (sumtaxa_numcat == 'false'){
                    return false;
                }
                
                //set the background color
                var sumtaxa_bgcolor=document.getElementById("sumtaxa_bgcolor");
                form_object.innerHTML=form_object.innerHTML+'<input type="hidden" name="plot_taxa_summary:background_color" value="'+sumtaxa_bgcolor[sumtaxa_bgcolor.selectedIndex].value+'">'
                
                //set the resolution to use
                var sumtaxa_res=check_int_range_0_100000000('sumtaxa_res');
                if (sumtaxa_res != 'false' && sumtaxa_res!=0){
                    form_object.innerHTML=form_object.innerHTML+'<input type="hidden" name="plot_taxa_summary:dpi" value="'+sumtaxa_res+'">'
                }else if (sumtaxa_res == 'false'){
                    return false;
                }
                
                //set the x-axis width to use
                var sumtaxa_x=check_int_range_0_100000000('sumtaxa_x');
                if (sumtaxa_x != 'false' && sumtaxa_x!=0){
                    form_object.innerHTML=form_object.innerHTML+'<input type="hidden" name="plot_taxa_summary:x_width" value="'+sumtaxa_x+'">'
                }else if (sumtaxa_x == 'false'){
                    return false;
                }
                
                //set the y-axis height to use
                var sumtaxa_y=check_int_range_0_100000000('sumtaxa_y');
                if (sumtaxa_y != 'false' && sumtaxa_y!=0){
                    form_object.innerHTML=form_object.innerHTML+'<input type="hidden" name="plot_taxa_summary:y_height" value="'+sumtaxa_y+'">'
                }else if (sumtaxa_y == 'false'){
                    return false;
                }
                
                //set the bar width
                if (sumtaxa_barw != 'false' && sumtaxa_barw != 0){
                    form_object.innerHTML=form_object.innerHTML+'<input type="hidden" name="plot_taxa_summary:bar_width" value="'+sumtaxa_barw+'">'
                }else if (sumtaxa_barw == 'false'){
                    return false;
                }
                
                //set the img type
                var sumtaxa_imgtype=document.getElementById("sumtaxa_imgtype");
                form_object.innerHTML=form_object.innerHTML+'<input type="hidden" name="plot_taxa_summary:type_of_file" value="'+sumtaxa_imgtype[sumtaxa_imgtype.selectedIndex].value+'">'
                
                //get the chart types
                var sumtaxa_charttype=get_select_box_values("sumtaxa_charttype");
                form_object.innerHTML=form_object.innerHTML+'<input type="hidden" name="plot_taxa_summary:chart_type" value="'+sumtaxa_charttype.join()+'">'
                
                //set the nth label to use
                var sumtaxa_nth=check_float_range_0_100000000('sumtaxa_nth');
                if (sumtaxa_nth != 'false' && sumtaxa_nth!=0){
                    form_object.innerHTML=form_object.innerHTML+'<input type="hidden" name="plot_taxa_summary:resize_nth_label" value="'+sumtaxa_nth+'">'
                }else if (sumtaxa_nth == 'false'){
                    return false;
                }
                
                //suppress html legend
                var sumtaxa_supleg=document.getElementById("sumtaxa_supleg");
                form_object.innerHTML=form_object.innerHTML+'<input type="hidden" name="plot_taxa_summary:suppress_html_legend" value="'+sumtaxa_supleg[sumtaxa_supleg.selectedIndex].value+'">'
                
                //suppress html counts
                var sumtaxa_supcts=document.getElementById("sumtaxa_supcts");
                form_object.innerHTML=form_object.innerHTML+'<input type="hidden" name="plot_taxa_summary:suppress_html_counts" value="'+sumtaxa_supcts[sumtaxa_supcts.selectedIndex].value+'">'
                
                //data type for x-axis values
                var sumtaxa_lbltype=document.getElementById("sumtaxa_lbltype");
                form_object.innerHTML=form_object.innerHTML+'<input type="hidden" name="plot_taxa_summary:a_label_type" value="'+sumtaxa_lbltype[sumtaxa_lbltype.selectedIndex].value+'">'
                
                
            }
        
        //set alpha-diversity parameters
        if (document.getElementById('check_arare').checked){
            jobs_to_start.push('arare')
            
            //set the max
            var arare_max=check_int_range_0_100000000('arare_max');
            if (arare_max != 'false' && arare_max!=0){
                form_object.innerHTML=form_object.innerHTML+'<input type="hidden" name="multiple_rarefactions:max" value="'+arare_max+'">'
            }else if (arare_max == 'false'){
                return false;
            }
            
            //set the min
            var arare_min=check_int_range_0_100000000('arare_min');
            if (arare_min != 'false' && arare_max!=0 && arare_min!=0){
                form_object.innerHTML=form_object.innerHTML+'<input type="hidden" name="multiple_rarefactions:min" value="'+arare_min+'">'
            }else if (arare_min == 'false'){
                return false;
            }
            
            //set the steps
            var arare_steps=check_int_range_0_100000000('arare_steps');
            if (arare_steps != 'false' && arare_steps!=0){
                form_object.innerHTML=form_object.innerHTML+'<input type="hidden" name="multiple_rarefactions:step" value="'+arare_steps+'">'
            }else if (arare_steps == 'false'){
                return false;
            }
            
            //set the background color
            var arare_bgcolor=document.getElementById("arare_bgcolor");
            form_object.innerHTML=form_object.innerHTML+'<input type="hidden" name="make_rarefaction_plots:background_color" value="'+arare_bgcolor[arare_bgcolor.selectedIndex].value+'">'

            //set the img-type
            var arare_imgtype=document.getElementById("arare_imgtype");
            form_object.innerHTML=form_object.innerHTML+'<input type="hidden" name="make_rarefaction_plots:imagetype" value="'+arare_imgtype[arare_imgtype.selectedIndex].value+'">'

            //set the ymax
            var arare_ymax=check_int_range_0_100000000('arare_ymax');
            if (arare_ymax != 'false' && arare_ymax!=0){
                form_object.innerHTML=form_object.innerHTML+'<input type="hidden" name="make_rarefaction_plots:ymax" value="'+arare_ymax+'">'
            }else if (arare_ymax == 'false'){
                return false;
            }
            
            //set the resolution
            var arare_res=check_int_range_0_100000000('arare_res');
            if (arare_res != 'false' && arare_res!=0){
                form_object.innerHTML=form_object.innerHTML+'<input type="hidden" name="make_rarefaction_plots:resolution" value="'+arare_res+'">'
            }else if (arare_res == 'false'){
                return false;
            }
            
            //get the arare colorby options
            var arare_colorby=get_select_box_values("arare_colorby");
            form_object.innerHTML=form_object.innerHTML+'<input type="hidden" name="make_rarefaction_plots:colorby" value="'+arare_colorby.join()+'">'
            
            //get the arare metric options
            var arare_metrics=get_select_box_values("arare_metrics");
            form_object.innerHTML=form_object.innerHTML+'<input type="hidden" name="alpha_diversity:metrics" value="'+arare_metrics.join()+'">'

        }
        
        form_object.innerHTML=form_object.innerHTML+'<input type="hidden" name="jobs_to_start" value="'+jobs_to_start.join()+'">'
        
        
        return true;
    }
    function show_hide_div(check_id,div_id){
        checkbox_to_show_hide=document.getElementById(check_id)
        div_to_show_hide=document.getElementById(div_id)
        if (checkbox_to_show_hide.checked){
            div_to_show_hide.style.display='';
        }else{
            div_to_show_hide.style.display='none';
        }
    }
    
</script>
<style type="text/css">
    td{
        text-align:left;
    }
    table.column_values td{
        text-align:left;
        width:300px;
        border: thin solid white;
    }
    
    th{
        text-align:center;
    }
    .countLabel 
    {
        color:Gray;
        font-style:italic;
    }
</style>


<!-- 
This form contains the input box for the list of terms, along with
the list of ontologies and function buttons.

Onsubmit returns false, since the form is not formally submitted and
it will remove the return key functionality.
-->

<form id="meta_analysis_params" name="meta_analysis_params" onsubmit="return false;">

<h3>Meta-Analyses to Perform</h3>
<div id='filename_prefix'>
    <b>Filename Prefix: </b>
    <input type="text" id="fname_prefix" name="fname_prefix" />
</div>
<br>
<p><b>OTU Table</b></p>
<div id='tax_assignment'>
    <table>
    <tr><td><b>Select Taxonomy: </b></td>
    <td>
        <select id="taxonomy" name="taxonomy">
            <option>G2_chip
            <option>Hugenholtz
            <option>Ludwig
            <option>NCBI
            <option>Pace
            <option selected>PHPR
            <option>RDP
        </select>
    </td></tr>
    <tr><td><b>Rarefied at: </b></td>
    <td><input type='text' id="otutable_rarefied_at" name="otutable_rarefied_at" /></td>
    </tr>
    </table>
    
</div>
<br>
<b><input type='checkbox' id='check_heatmap' onclick='show_hide_div(this.id,"heatmap_div")'>&nbsp;Heatmap</input></b>
<br>
<div id='heatmap_div' style='display:none;valign:top'>
    <table><tr>
    <td><b>Min # of OTU Hits: </b></td>
    <td><input type='text' id="heatmap_otu_hits" name="heatmap_otu_hits" /></td>
    </tr>
    <tr>
    <td><b>Log Transform: </b></td>
    <td>
        <select id="heatmap_log_transform" name="heatmap_log_transform">
            <option>False
            <option>True
        </select>
    </td>
    </tr>
    <tr>
    <td><b>Replace Zeros with: </b></td>
    <td><input type='text' id="log_transform_replace" name="log_transform_replace" /><em style="color:gray">(this only applies if log-transform is true)</em></td>
    </tr>
    </table>
</div>
<br>
<!-- define Taxa Summary-->
<b><input type='checkbox' id='check_sumtaxa' onclick='show_hide_div(this.id,"sumtaxa_div")'>&nbsp;Taxonomy Summary</input></b>
<br>
<div id='sumtaxa_div' style='display:none;valign:top'>
    <b>&nbsp;&nbsp;<input type='checkbox' id='check_sumcat' onclick='show_hide_div(this.id,"sumcat_div")'>&nbsp;Summarize OTU by Category</input></b>
    <br>
    <div id='sumcat_div' style='display:none;valign:top'>
    <table>
        <td><b>Category: </b></td>
        <td>
            <select id="sumcat_cat" name="sumcat_cat">
                <option>SampleID
                <option>LinkerPrimerSequence
<%
for i in column_headers:
    req.write('<option>'+i);
#
%>
                <option>Description
            </select>
        </td>
    </tr>
    <tr>
    <td><b>Normalize:</b></td>
    <td>
        <select id="sumcat_norm" name="sumcat_norm">
            <option>True
            <option selected>False
        </select>
    </td>
    </tr>
    </table></div>
    <table>
    <tr>
    <td><b>Absolute Abundance:</b></td>
    <td>
        <select id="sumtaxa_abs" name="sumtaxa_abs">
            <option>True
            <option selected>False
        </select>
    </td>
    </tr>
    <tr>
    <td><b>Level(s):</b></td>
    <td>
        <select id="sumtaxa_level" name="sumtaxa_level" multiple>
            <option value=1>Domain
            <option value=2 selected>Phylum
            <option value=3>Class
            <option value=4>Order
            <option value=5>Family
            <option value=6>Genus
            <option value=7>Species
        </select>
    </td>
    </tr>
    <tr>
    
        <td><b>Background Color:</b></td>
        <td>
            <select id="sumtaxa_bgcolor" name="sumtaxa_bgcolor">
                <option>black
                <option>white
            </select>
        </td>
    </tr>
    <tr>
        <td><b>Image Type:</b></td>
        <td>
            <select id="sumtaxa_imgtype" name="sumtaxa_imgtype">
                <option>pdf
                <option selected>png
                <option>svg
            </select>
        </td>
    </tr>
    <tr>
        <td><b>Chart Type:</b></td>
        <td>
            <select id="sumtaxa_charttype" name="sumtaxa_charttype" multiple>
                <option selected>area
                <option selected>bar
                <option>pie
            </select>
        </td>
    </tr>
    <tr>
        <td><b>X-axis Width: </b></td><td><input type='text' id="sumtaxa_x" name="sumtaxa_x" /></td>
    </tr>
    <tr>
        <td><b>Y-axis Height: </b></td><td><input type='text' id="sumtaxa_y" name="sumtaxa_y" /></td>
    </tr>
    <tr>
        <td><b>Bar Width: </b></td><td><input type='text' id="sumtaxa_barw" name="sumtaxa_barw" /></td>
    </tr>
    <tr>
        <td><b>Resolution: </b></td><td><input type='text' id="sumtaxa_res" name="sumtaxa_res" /></td>
    </tr>
    <tr>
        <td><b>Number of Categories to keep: </b></td><td><input type='text' id="sumtaxa_numcat" name="sumtaxa_numcat" /></td>
    </tr>
    <tr>
        <td><b>Resize every nth label: </b></td><td><input type='text' id="sumtaxa_nth" name="sumtaxa_nth" /></td>
    </tr>
    <tr>
    <td><b>Suppress HTML-Legend:</b></td>
    <td>
        <select id="sumtaxa_supleg" name="sumtaxa_supleg">
            <option>True
            <option selected>False
        </select>
    </td>
    </tr>
    <tr>
    <td><b>Suppress HTML-Counts:</b></td>
    <td>
        <select id="sumtaxa_supcts" name="sumtaxa_supcts">
            <option>True
            <option selected>False
        </select>
    </td>
    </tr>
    <tr>
    <td><b>Label Type:</b></td>
    <td>
        <select id="sumtaxa_lbltype" name="sumtaxa_lbltype">
            <option>float
            <option>int
            <option selected>str
        </select>
    </td>
    </tr>
    </table>
</div>
<br>
<!-- define Alpha-Diversity and Rarefaction plots-->
<b><input type='checkbox' id='check_arare' onclick='show_hide_div(this.id,"arare_div")'>&nbsp;Alpha-Diversity</input></b>
<br>
<div id='arare_div' style='display:none;valign:top'>
    <table>
    <tr>
    <td><b>Min # of Seqs/Sample: </b></td>
    <td><input type='text' id="arare_min" name="arare_min" /></td>
    </tr>
    <tr>
    <td><b>Max # of Seqs/Sample: </b></td>
    <td><input type='text' id="arare_max" name="arare_max" /></td>
    </tr>
    <tr>
    <td><b># of Steps: </b></td>
    <td><input type='text' id="arare_steps" name="arare_steps" /></td>
    </tr>
    <tr>
        <td><b>Metrics: </b></td>
        <td>
            <select id="arare_metrics" name="arare_metrics" multiple>
<%

for i in alpha_metrics:
    if i in ['PD_whole_tree','observed_species']:
        req.write('<option selected>'+i)
    else:
        req.write('<option>'+i)
#
%>
            </select>
        </td>
    </tr>
    <tr>
        <td><b>Colorby: </b></td>
        <td>
            <select id="arare_colorby" name="arare_colorby" multiple>
                <option>SampleID
                <option>LinkerPrimerSequence
<%
for i in column_headers:
    req.write('<option>'+i);
#
%>
                <option>Description
            </select>
        </td>
    </tr>
    <tr>
        <td><b>Background Color:</b></td>
        <td>
            <select id="arare_bgcolor" name="arare_bgcolor">
                <option>black
                <option>white
            </select>
        </td>
    </tr>
    <tr>
        <td><b>Image Type:</b></td>
        <td>
            <select id="arare_imgtype" name="arare_imgtype">
                <option>pdf
                <option selected>png
                <option>svg
            </select>
        </td>
    </tr>
    <tr>
        <td><b>Resolution: </b></td><td><input type='text' id="arare_res" name="arare_res" /></td>
    </tr>
    <tr>
        <td><b>Y-axis maximum: </b></td><td><input type='text' id="arare_ymax" name="arare_ymax" /></td>
    </tr>
    </table>
</div>
<br>
<b><input type='checkbox' id='check_bdiv' onclick='show_hide_div(this.id,"beta_div")'>&nbsp;Beta-Diversity</input></b>
<br><br>
<div id='beta_div' style='display:none;valign:top'>
    <table><tr>
        <td><b>Metrics: </b></td>
        <td>
            <select id="bdiv_metric" name="bdiv_metric" multiple>
<%
for i in beta_metrics:
    if i in ['weighted_unifrac','unweighted_unifrac']:
        req.write('<option selected>'+i)
    else:
        req.write('<option>'+i)
#
%>
            </select>
        </td>
        </tr><tr>
        <td><b>Rarefied at: </b></td>
        <td>
            <input type='text' id="bdiv_rarefied_at" name="bdiv_rarefied_at" /><em style="color:gray">(default: use OTU table parameters)</em>
        </td>
        </tr>
        <tr><td><b>Visualizations:</b></td><td><b><input type='checkbox' id='check_3d_plots' onclick='show_hide_div(this.id,"3d_plots")'>&nbsp;3D PCoA Plots</input></b></td></tr>
        <tr><td></td><td>
        <div id='3d_plots' style='display:none;valign:top'>
            <table><tr>
            <td>&nbsp;&nbsp;&nbsp;&nbsp;<b>Background Color: </b></td>
            <td>
                <select id="3dbdiv_bgcolor" name="3dbdiv_bgcolor">
                    <option>black
                    <option>white
                </select>
            </td>
            <td>&nbsp;&nbsp;<b>Colorby: </b></td>
            <td>
                <select id="3dbdiv_colorby" name="3dbdiv_colorby" multiple>
                    <option>SampleID
                    <option>LinkerPrimerSequence
<%
for i in column_headers:
    req.write('<option>'+i);
#
%>
                    <option>Description
                </select>
            </td>
            <td>&nbsp;&nbsp;<b>Custom Axis: </b></td>
            <td>
                <select id="3dbdiv_axes" name="3dbdiv_axes">
                    <option>
                    <option>SampleID
                    <option>LinkerPrimerSequence
<%
for i in column_headers:
    req.write('<option>'+i);
#
%>
                    <option>Description
                </select>
            </td>
            </tr>
            </table></div>
        <td></tr>    
        <tr><td></td><td><b><input type='checkbox' id='check_2d_plots' onclick='show_hide_div(this.id,"2d_plots")'>&nbsp;2D PCoA Plots</input></b></td></tr>
        <tr><td></td><td>
        <div id='2d_plots' style='display:none;valign:top'>
            <table><tr>
            <td>&nbsp;&nbsp;&nbsp;&nbsp;<b>Background Color: </b></td>
            <td>
                <select id="2dbdiv_bgcolor" name="2dbdiv_bgcolor">
                    <option>black
                    <option>white
                </select>
            </td>
            <td>&nbsp;&nbsp;<b>Colorby: </b></td>
            <td>
                <select id="2dbdiv_colorby" name="2dbdiv_colorby" multiple>
                    <option>SampleID
                    <option>LinkerPrimerSequence
<%
for i in column_headers:
    req.write('<option>'+i);
#
%>
                    <option>Description
                </select>
            </td>
            </tr>
            </table></div>
        <td></tr>
        <tr><td></td><td><b><input type='checkbox' id='check_dist_hist' onclick='show_hide_div(this.id,"dist_hist")'>&nbsp;Distance Histograms</input></b></td></tr>
        <tr><td></td><td>
        <div id='dist_hist' style='display:none;valign:top'>
            <table><tr>
            <td>&nbsp;&nbsp;&nbsp;&nbsp;<b>Background Color: </b></td>
            <td>
                <select id="disthist_bgcolor" name="disthist_bgcolor">
                    <option>black
                    <option>white
                </select>
            </td>
            <td>&nbsp;&nbsp;&nbsp;&nbsp;<b>Perform Monte-Carlo: </b></td>
            <td>
                <select id="disthist_montecarlo" name="disthist_montecarlo">
                    <option>False
                    <option>True
                </select>
            </td>
            <td>&nbsp;&nbsp;&nbsp;&nbsp;<b>Monte-Carlo Iterations: </b></td>
            <td>
                <input type='text' id="disthist_monteiter" name="disthist_monteiter" /><em style="color:gray">(default: 100)</em>
            </td>
            <td>&nbsp;&nbsp;<b>Fields to Compare: </b></td>
            <td>
                <select id="disthist_fields" name="disthist_fields" multiple>
                    <option>SampleID
                    <option>LinkerPrimerSequence
<%
for i in column_headers:
    req.write('<option>'+i);
#
%>
                    <option>Description
                </select>
            </td>
            </tr>
            </table></div>
        <td></tr>
    </table>
</div>
<br>

<br>
<!-- 
    The following table is where we will be dynamically writing
    the results.
-->
<table id='field_ref_table' class="column_values" bgcolor="#C0C0C0">
</table>
</form>
<form id="metadata_submission" onsubmit="return post_Array()" method="post" action="select_metadata/submit_meta_analyses.psp">
<%
for i in form_data:
    if i != 'page':
        req.write('<input type="hidden" name="%s" value="%s" />' % (i,form_data[i]));
#
%>
    <br/>
    <input type="submit" />
</form>
