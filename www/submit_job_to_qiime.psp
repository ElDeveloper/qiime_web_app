<%
__author__ = "Doug Wendel"
__copyright__ = "Copyright 2009-2010, Qiime Web Analysis"
__credits__ = ["Doug Wendel"]
__license__ = "GPL"
__version__ = "1.0.0.dev"
__maintainer__ = ["Doug Wendel"]
__email__ = "wendel@colorado.edu"
__status__ = "Development"
%>

<%
from validate_submission import validateRunPrefix, validateFileExistence
from submit_job_to_qiime import submitJobsToQiime
from os.path import exists, join
from os import remove

# Gather necessary values to create a new queue job
sess = Session.Session(req)
study_id = int(sess['study_id'])
user_id = int(sess['web_app_user_id'])
mapping_file_dir = sess['mapping_file_dir']
study_dir = sess['study_dir']
process_only = str(form['process_only'])
submit_to_test_db = str(form['submit_to_test_db'])
cleanup_in_progress = join(study_dir, '_cleanup_in_progress')
cleanup_complete = join(study_dir, '_cleanup_complete')


def redirectPage(page_name, form_var_dict):
    req.write("""
    <form id="redirect" action="%s" method="post">
    """ % page_name)
    for form_var in form_var_dict:
        req.write("""
        <input type="hidden" name="%s" id="%s" value="%s">
        """ % (form_var, form_var, form_var_dict[form_var]))
    req.write("""
    </form>
    <script>
        document.forms['redirect'].submit()
    </script>
    """)

def validate():
    message = ""

    # check the sequence file existence
    absence = validateFileExistence(study_id, study_dir)
    if len(absence):
        message += "The following files do not exist: "
        message += ", ".join(absence) + '.<br/>'
        redirectPage("fusebox.psp", \
                         {"page":"select_study_task.psp",
                          "message":message})
        return 1
    else:
        message += "All sequence files exist.<br/>"


    # check run prefixes
    valid = validateRunPrefix(study_id)
    if valid is False:
        message += "None of the run prefix values are valid.<br/>"
        redirectPage("fusebox.psp", \
                         {"page":"select_study_task.psp",
                          "message":message})
        return 1
    elif len(valid):
        message += "The following run prefixes are invalid: "
        message += ", ".join(valid) + '.<br/>'
        redirectPage("fusebox.psp", \
                         {"page":"select_study_task.psp",
                          "message":message})
        return 1
    else:
        message += "All run prefixes are valid.<br/>"
        try:        
            # Submit the jobs
            submitJobsToQiime(study_id, user_id, mapping_file_dir, process_only, submit_to_test_db)
    
            redirectPage("fusebox.psp", \
                             {"page":"select_study_task.psp",
                              "message":message})
        except Exception, e:
            req.write(str(e))
            return 1
    return 0

validate()
# de-indent
%>
