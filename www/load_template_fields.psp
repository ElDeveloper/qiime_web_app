<%
__author__ = 'Doug Wendel'
__copyright__ = 'Copyright 2009-2010, Qiime Web Analysis'
__credits__ = ['Doug Wendel', 'Jesse Stombaugh']
__license__ = 'GPL'
__version__ = '1.0.0.dev'
__maintainer__ = ['Doug Wendel']
__email__ = 'wendel@colorado.edu'
__status__ = 'Development'

''' 
This page is consumed by new_template.psp as a means for generating the list of 
available fields for a package type.
'''
%>

<th style='text-align:left'>Include in Template?</th>
<th style='text-align:left'>Field Name</th>
<th style='text-align:left'>Data Type</th>
<th style='text-align:left'>Description/Expected Values</th>
<th style='text-align:left'>Details</th>

<tr>
    <td width='200px'></td>
    <td width='250px'></td>
    <td width='100px'></td>
    <td width='200px'></td>
    <td></td>
</tr>

<%
from mod_python import *
from qiime_data_access import *

sess = Session.Session(req)

def outputFields(field_list, prefix, header_text):
    count = 0


    # Sort the fields
    field_list = sorted(field_list)
    for field in field_list:
        sess["field_list"].append(field[0].lower())
        if field[0] == 'sample_name':
            field_list.remove(field)
            field_list.insert(0, field)
        elif field[0] == 'project_name':
            field_list.remove(field)
            field_list.insert(0, field)
    sess.save()
                
    #Output a header row
    if header_text != '':
        style = 'background:#444444;color:#FFFFFF;vertical-align:middle;font-size:20px'
        req.write('<tr style=\'%s\'><td colspan=5></td></tr>' % (style))
        req.write('<tr style=\'%s\'><td colspan=5>%s</td><tr>' % (style, header_text))
        #req.write('<tr style=\'%s\'><td colspan=5></td></tr>' % (style))

    for field in field_list:
        # Extract the variables for readability
        column_name_with_prefix = prefix + ':' + field[0]
        column_name = field[0]
        required = field[1]
        data_type = field[2]
        desc_or_value = field[3]
        definition = field[4]
        
        # For alternate coloring of rows
        if required == 'M':
            row_color = '#FFDDDD'
        elif count % 2 == 0: 
            row_color = '#FFFFFF'
        else:
            row_color = '#EEEEFF'

        # Output each table row
        if required == 'M': # Manditory
            req.write('<tr style=\'background:%s\'><td><b>Required</b></td><td>%s</td><td>%s</td><td>%s</td><td>%s</td></tr>' \
                % (row_color, column_name, data_type, desc_or_value, definition))
            req.write('\n<input type=hidden id=\'%s\' name = \'%s\' value=\'%s\'>' % (column_name_with_prefix, column_name_with_prefix, 'on'))
        elif required == 'H': # Manditory but hide from user until export
            req.write('\n<input type=hidden id=\'%s\' name = \'%s\' value=\'%s\'>' % (column_name_with_prefix, column_name_with_prefix, 'on'))
        else: # Optional fields
            req.write('<tr style=\'background:%s\'><td><input type=\'checkbox\' id=\'%s\' name=\'%s\'></td><td>%s</td><td>%s</td><td>%s</td><td>%s</td></tr>' \
                % (row_color, column_name_with_prefix, column_name_with_prefix, column_name, data_type, desc_or_value, definition))    
        
        # For source readability
        req.write('\n')
        
        # Increment for alternating coloring
        count += 1


# Make sure the field list is an empty list
sess["field_list"] = []
sess.save()

# Write out the study fields
field_list = QiimeDataAccess().getPackageColumns(-3)
outputFields(field_list, 'study', 'Study Fields')

# Write out the SRA study fields
field_list = QiimeDataAccess().getPackageColumns(-7)
outputFields(field_list, 'study', 'SRA Study Fields')

# Write out the prep fields
field_list = QiimeDataAccess().getPackageColumns(-1)
outputFields(field_list, 'prep', 'Library/Prep/Sequence Fields')

# Write out the SRA experiment fields
field_list = QiimeDataAccess().getPackageColumns(-6)
outputFields(field_list, 'prep', 'SRA Experiment Fields')

# Write out the required sample fields along with the package-specific fields
field_list = QiimeDataAccess().getPackageColumns(-2)
outputFields(field_list, 'sample', 'Required Sample Fields')

# Write out the SRA sample fields
field_list = QiimeDataAccess().getPackageColumns(-5)
outputFields(field_list, 'sample', 'SRA Sample Fields')

# Write out the rest of the package fields
parameters = util.FieldStorage(req)
package_type_id = parameters.get('package_type_id', None)
field_list = QiimeDataAccess().getPackageColumns(package_type_id)
outputFields(field_list, 'sample', 'Package-Specific Sample Fields')
%>

<tr>
    <td colspan='5'>&nbsp</td>
</tr>
<tr>
    <td colspan='5'>
        <table id="selected_additional_fields">
        </table>
        <p/>Search for additional fields:
        <p/><input type="text" name="search_term" id="search_term" onkeyup="loadAdditionalFields();" onclick="loadAdditionalFields();">
        <p/>
        <table id="additional_fields_results">
        </table>
    </td>
</tr>
<tr>
    <td colspan='5'>&nbsp</td>
</tr>
<tr>
    <td colspan='5'><input type='submit' value='Genereate Templates'></td>
</tr>
