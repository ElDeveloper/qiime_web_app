<%
__author__ = "Doug Wendel"
__copyright__ = "Copyright 2009-2010, Qiime Web Analysis"
__credits__ = ["Doug Wendel"]
__license__ = "GPL"
__version__ = "1.0.0.dev"
__maintainer__ = ["Doug Wendel"]
__email__ = "wendel@colorado.edu"
__status__ = "Development"
%>

<h3>Please wait while values are written to the database...</h3>
<p style="font-size:12px">Writing Keys:</p>
<%
from qiime_data_access import *

# Gather all fields for submission
study_name = sess['study_name']
study_id = sess['study_id']
sample_key_fields = {}
prep_key_fields = {}
key_field = None

prep_fields = []

# Make one pass to pull out all of the key fields and create rows
for item in form:
    parts = item.split(':')
    
    # Not a metadata field if length of parts is wrong
    if len(parts) != 4:
        continue
            
    field_type = parts[0]
    row_num = parts[1]
    field_name = parts[3]
    field_value = form[item]
    
    if field_type == 'study':
        key_field = study_name
    elif field_type == 'sample':
        if field_name == 'sample_name':
            # Insert the sample key row and add it to the dictionary
            #req.write('<br/>Writing "%s" key to database: "%s"; "%s"; value: "%s"' % (field_type, field_name, study_name, field_value))
            req.write('* ')
            QiimeDataAccess().createKeyField(study_id, study_name, field_type, field_value)
            sample_key_fields[row_num] = field_value
    elif field_type == 'prep':
        if field_name == 'sample_name':
            # Capture the value only - will insert after we have done all samples
            prep_fields.append(item)
            prep_key_fields[row_num] = field_value

# Insert the prep key fields now that sample rows all exist
for item in prep_fields:
    parts = item.split(':')            
    field_type = parts[0]
    field_name = parts[3]
    field_value = form[item]
    #req.write('<br/>Writing "%s" key to database: "%s"; "%s"; value: "%s"' % (field_type, field_name, study_name, field_value))
    req.write('* ')
    QiimeDataAccess().createKeyField(study_id, study_name, field_type, field_value)

req.write('<p style="font-size:12px">Writing Field Values:</p>')

# Make a 2nd pass to write the rest of the values now that rows exist
for item in form:
    # Reset the key_field
    key_field = None
    
    parts = item.split(':')
    
    # Not a metadata field if length of parts is wrong
    if len(parts) != 4:
        continue

    field_type = parts[0]
    row_num = parts[1]
    field_name = parts[3]
    field_value = form[item]
    
    # Skip these since we already processed them
    if field_name == 'sample_name' or field_name == 'study_name':
        continue
    
    if field_type == 'sample':
        key_field = sample_key_fields[row_num]
    elif field_type == 'prep':
        key_field = prep_key_fields[row_num]
    elif field_type == 'study':
        key_field = study_name
                    
    # Just in case...
    if key_field == None:
        continue
    
    # Now that we're sure all parent rows exist, write the field value to db
    #req.write('<br/> Writing metadata value to database: %s, value %s' % (field_name, field_value))
    req.write('* ')
    result = QiimeDataAccess().writeMetadataValue(field_type, key_field, field_name, field_value, study_id)
    if result != None:
        req.write('<p style="font-size:10px">WARNING: %s</p>' % (result))


req.write('<h3>Upload Complete</h3>')



#req.write('<hr/>')
# Some debugging output
#req.write(study_name)
#req.write('<hr/>')

#for item in sample_key_fields:
#    req.write(item + ': ' + sample_key_fields[item] + '<br/>')

#req.write('<hr/>')

#for item in prep_key_fields:
#    req.write(item + ': ' + prep_key_fields[item] + '<br/>')

#req.write('<hr/>')

#req.write(str(sess))
#req.write('<hr/>')
#req.write('<table>')
#for item in form:
#    req.write('<tr><td>')
#    req.write(str(item))
#    req.write('</td><td>')
#    req.write(form[item])
#    req.write('</td></tr>')

#req.write('</table>')
%>
