<%
__author__ = "Jesse Stombaugh"
__copyright__ = "Copyright 2009-2010, Qiime Web Analysis"
__credits__ = ["Doug Wendel", "Jesse Stombaugh"]
__license__ = "GPL"
__version__ = "1.0.0.dev"
__maintainer__ = ["Doug Wendel", "Jesse Stombaugh"]
__email__ = "wendel@colorado.edu"
__status__ = "Development"

'''This page takes the username and password from the User's email and
activates their account.'''

from mod_python import Session
from data_access_connections import data_access_factory
from enums import ServerConfig
%>
<!-- this is header information for the page -->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
  "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html>
<head>
<title>Qiime</title>
<link rel="stylesheet" href="style.css" type="text/css" />
</head>
<body>
<form target="_top" id="send_me_home" name="send_me_home" action="fusebox.psp" method="post">
    <input type="hidden" id="page" name="page" value="select_task.psp" />
</form>
<a href="#" onclick="send_me_home.submit();"><img src="./img/wordpressheader.png" alt="Qiime Logo" border=0 /></a>
<table class="header_table">
<tr><td>Account Activation</td></tr>
</table>

<%
#This loop verifies the username and activation code in the url.
if form.has_key('username') and form.has_key('activation_code'):
    #if username and activation code are valid, make the account valid
    qiimeDataAccess= data_access_factory(ServerConfig.data_access_type)
    
    #verify activation
    verify_activation = qiimeDataAccess.activateWebAppUser(form['username'], \
                                            form['activation_code'])
    if verify_activation:
        req.write('<p>Your Account has been activated!</p>')
        req.write('<input type="button" onclick="send_me_home.submit();" value="Log In" \>')
        
    else:
        req.write('<p style="color:red">Invalid Username/Activation Code: Please verify that the username and activation code are the same as in your email.</p>')
else:
    #if the variables are broken in the url, print an error message
    req.write('<p style="color:red">Invalid URL: Please verify that the url from your email matches what is in the browser.</p>')
%>
</body>
</html>